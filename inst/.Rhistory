WHO_TB <- read_WHO_xlsx(WHO_path)
## 找出每个表中没有EPI ID的行,去除重复
absent_Isolate <- extract_Isolate_ID_absent(WHO_TB,absent.row = "Isolate_ID",info_col=1:6,only_Ref = FALSE)
absent_Isolate
View(WHO_TB[[1]])
devtools::document()
## 读取GISAID参考信息和序列
flu_type = 'H1N1'
WHO_path = "/Users/oliver/Downloads/同步空间/U-Vaccine/数据/HI/Francis Crick HI/H1N1(Annotation)/H1N1(42).xlsx"
GISAID_HA_path = paste0("/Users/oliver/Downloads/同步空间/U-Vaccine/数据/Sequence/Protein/",flu_type,"_HA/All.fasta")
GISAID_NA_path = paste0("/Users/oliver/Downloads/同步空间/U-Vaccine/数据/Sequence/Protein/",flu_type,"_NA/All.fasta")
GISAID_HA <- build_GISAID(GISAID_HA_path,type=flu_type,seq_type = "AA",nROW = 16)
GISAID_NA <- build_GISAID(GISAID_NA_path,type=flu_type,seq_type = "AA",nROW = 16)
## 读取有EPI ID号的表格
WHO_TB <- read_WHO_xlsx(WHO_path)
## 找出每个表中没有EPI ID的行,去除重复
absent_Isolate <- extract_Isolate_ID_absent(WHO_TB,absent.row = "Isolate_ID",info_col=1:6,only_Ref = FALSE)
View(absent_Isolate)
## 读取GISAID参考信息和序列
flu_type = 'H1N1'
WHO_path = "/Users/oliver/Downloads/同步空间/U-Vaccine/数据/HI/Francis Crick HI/H1N1(Annotation)/H1N1(42).xlsx"
GISAID_HA_path = paste0("/Users/oliver/Downloads/同步空间/U-Vaccine/数据/Sequence/Protein/",flu_type,"_HA/All.fasta")
GISAID_NA_path = paste0("/Users/oliver/Downloads/同步空间/U-Vaccine/数据/Sequence/Protein/",flu_type,"_NA/All.fasta")
GISAID_HA <- build_GISAID(GISAID_HA_path,type=flu_type,seq_type = "AA",nROW = 16)
GISAID_NA <- build_GISAID(GISAID_NA_path,type=flu_type,seq_type = "AA",nROW = 16)
## 读取有EPI ID号的表格
WHO_TB <- read_WHO_xlsx(WHO_path)
## 找出每个表中没有EPI ID的行,去除重复
absent_Isolate <- extract_Isolate_ID_absent(WHO_TB,absent.row = "Isolate_ID",info_col=1:6,only_Ref = FALSE)
absent_Isolate$`Collection date` <- as.character(absent_Isolate$`Collection date`)
## 在GISAID参考信息中,寻找Virus name, Collection date, Passage history完全一样的序列
warning_list <- c()
for(i in seq_along(absent_Isolate[,1])){
GISAID_REF <- GISAID_HA[[1]]
Record <- absent_Isolate[i,]
Virus <- Record$Virus
Date <- Record$`Collection date`
Passage <- Record$`Passage history`
idx_Virus <- which(GISAID_REF$`Isolate name` == Virus)
idx_Date <- which(GISAID_REF$`Collection date` == Date)
if(is.na(Date))
idx_Date <- seq_along(GISAID_REF[,1])
idx_Passage <- which(GISAID_REF$`Passage details/history` == Passage)
if(is.na(Passage))
idx_Passage <- seq_along(GISAID_REF[,1])
idx_match <- intersect(intersect(idx_Virus,idx_Date),idx_Passage)
if(length(idx_match) != 0){
print(i)
absent_Isolate[i,1:2] <- c(GISAID_REF$`Isolate ID`[idx_match[1]],'same')
}else if(length(idx_match) > 1){
warning_list <- c(warning_list,i)
}
}
idx_1 <- which(is.na(absent_Isolate$`Genetic group`))
idx_2 <- which(is.na(absent_Isolate$Isolate_ID))
if(length(idx_1)!=0&length(idx_2)!=0){
dd=absent_Isolate[-intersect(idx_1,idx_2),]
}else{
dd=absent_Isolate
}
dd$Isolate_ID[is.na(dd$Isolate_ID)] <- ""
dd$ID_Passs[is.na(dd$ID_Passs)] <- ""
View(dd)
write.csv(dd,row.names = FALSE,
file = "/Users/oliver/Desktop/absent.csv")
rm(list=ls())
# 1. fill absent in Isolate_ID
flu_type = 'H1N1'
# 1. fill absent in Isolate_ID
flu_type = 'H1N1'
WHO_path = "/Users/oliver/Downloads/同步空间/U-Vaccine/数据/HI/Francis Crick HI/H1N1(Annotation)/H1N1(43).xlsx"
GISAID_path = paste0("/Users/oliver/Downloads/同步空间/U-Vaccine/数据/Sequence/Protein/",flu_type,"/All.fasta")
GISAID_data <- build_GISAID(GISAID_path,type=flu_type,seq_type = "AA",nROW = 16)
devtools::document()
GISAID_data <- build_GISAID(GISAID_path,type=flu_type,seq_type = "AA",nROW = 16)
# 1. fill absent in Isolate_ID
flu_type = 'H3N2'
WHO_path = "/Users/oliver/Downloads/同步空间/U-Vaccine/数据/HI/Francis Crick HI/H3N2(Annotation)/H1N1(43).xlsx"
GISAID_path = paste0("/Users/oliver/Downloads/同步空间/U-Vaccine/数据/Sequence/Protein/",flu_type,"/All.fasta")
GISAID_data <- build_GISAID(GISAID_path,type=flu_type,seq_type = "AA",nROW = 16)
## 读取有EPI ID号的表格
WHO_TB <- read_WHO_xlsx(WHO_path)
WHO_path = "/Users/oliver/Downloads/同步空间/U-Vaccine/数据/HI/Francis Crick HI/H3N2(Annotation)/H3N2(43).xlsx"
GISAID_path = paste0("/Users/oliver/Downloads/同步空间/U-Vaccine/数据/Sequence/Protein/",flu_type,"/All.fasta")
GISAID_data <- build_GISAID(GISAID_path,type=flu_type,seq_type = "AA",nROW = 16)
## 读取有EPI ID号的表格
WHO_TB <- read_WHO_xlsx(WHO_path)
## 找出每个表中没有EPI ID的行,去除重复
absent_Isolate <- extract_Isolate_ID_absent(WHO_TB,absent.row = "Isolate_ID",info_col=1:6,only_Ref = FALSE)
absent_Isolate$`Collection date` <- as.character(absent_Isolate$`Collection date`)
## 在GISAID参考信息中,寻找Virus name, Collection date, Passage history完全一样的序列
warning_list <- c()
consider_Data <- FALSE
for(i in seq_along(absent_Isolate[,1])){
GISAID_REF <- GISAID_data[[1]]
Record <- absent_Isolate[i,]
Virus <- Record$Virus
Date <- Record$`Collection date`
Passage <- Record$`Passage history`
idx_Virus <- which(GISAID_REF$`Isolate name` == Virus)
idx_Date <- which(GISAID_REF$`Collection date` == Date)
if(is.na(Date))
idx_Date <- seq_along(GISAID_REF[,1])
idx_Passage <- which(GISAID_REF$`Passage details/history` == Passage)
if(is.na(Passage))
idx_Passage <- seq_along(GISAID_REF[,1])
if(consider_Data)
idx_match <- intersect(intersect(idx_Virus, idx_Date),idx_Passage)
else
idx_match <- intersect(idx_Virus,idx_Passage)
if(length(idx_match) != 0){
print(i)
absent_Isolate[i,1:2] <- c(GISAID_REF$`Isolate ID`[idx_match[1]],'same')
}else if(length(idx_match) > 1){
warning_list <- c(warning_list,i)
}
}
idx_1 <- which(is.na(absent_Isolate$`Genetic group`))
idx_2 <- which(is.na(absent_Isolate$Isolate_ID))
if(length(idx_1)!=0&length(idx_2)!=0){
dd=absent_Isolate[-intersect(idx_1,idx_2),]
}else{
dd=absent_Isolate
}
dd$Isolate_ID[is.na(dd$Isolate_ID)] <- ""
dd$ID_Passs[is.na(dd$ID_Passs)] <- ""
write.csv(dd,row.names = FALSE,
file = "/Users/oliver/Desktop/absent.csv")
# 1. fill absent in Isolate_ID
flu_type = 'H1N1'
rm(list=ls())
# 1. fill absent in Isolate_ID
flu_type = 'H1N1'
WHO_path = "/Users/oliver/Downloads/同步空间/U-Vaccine/数据/HI/Francis Crick HI/H1N1(Annotation)/H1N1(43).xlsx"
GISAID_path = paste0("/Users/oliver/Downloads/同步空间/U-Vaccine/数据/Sequence/Protein/",flu_type,"/All.fasta")
GISAID_data <- build_GISAID(GISAID_path,type=flu_type,seq_type = "AA",nROW = 16)
GISAID_data <- build_GISAID(GISAID_path,type=flu_type,seq_type = "AA",nROW = 16)
GISAID_data <- build_GISAID(GISAID_path,type=flu_type,seq_type = "AA",nROW = 15)
GISAID_data <- build_GISAID(GISAID_path,type=flu_type,seq_type = "AA",nROW = 15)
GISAID_data <- build_GISAID(GISAID_path,type=flu_type,seq_type = "AA",nROW = 15)
GISAID_data <- build_GISAID(GISAID_path,type=flu_type,seq_type = "AA",nROW = 15)
GISAID_data <- build_GISAID(GISAID_path,type=flu_type,seq_type = "AA",nROW = 16)
View(GISAID_data[[1]])
## 读取有EPI ID号的表格
WHO_TB <- read_WHO_xlsx(WHO_path)
## 找出每个表中没有EPI ID的行,去除重复
absent_Isolate <- extract_Isolate_ID_absent(WHO_TB,absent.row = "Isolate_ID",info_col=1:6,only_Ref = FALSE)
absent_Isolate$`Collection date` <- as.character(absent_Isolate$`Collection date`)
## 在GISAID参考信息中,寻找Virus name, Collection date, Passage history完全一样的序列
warning_list <- c()
consider_Data <- FALSE
for(i in seq_along(absent_Isolate[,1])){
GISAID_REF <- GISAID_data[[1]]
Record <- absent_Isolate[i,]
Virus <- Record$Virus
Date <- Record$`Collection date`
Passage <- Record$`Passage history`
idx_Virus <- which(GISAID_REF$`Isolate name` == Virus)
idx_Date <- which(GISAID_REF$`Collection date` == Date)
if(is.na(Date))
idx_Date <- seq_along(GISAID_REF[,1])
idx_Passage <- which(GISAID_REF$`Passage details/history` == Passage)
if(is.na(Passage))
idx_Passage <- seq_along(GISAID_REF[,1])
if(consider_Data)
idx_match <- intersect(intersect(idx_Virus, idx_Date),idx_Passage)
else
idx_match <- intersect(idx_Virus,idx_Passage)
if(length(idx_match) != 0){
print(i)
absent_Isolate[i,1:2] <- c(GISAID_REF$`Isolate ID`[idx_match[1]],'same')
}else if(length(idx_match) > 1){
warning_list <- c(warning_list,i)
}
}
idx_1 <- which(is.na(absent_Isolate$`Genetic group`))
idx_2 <- which(is.na(absent_Isolate$Isolate_ID))
if(length(idx_1)!=0&length(idx_2)!=0){
dd=absent_Isolate[-intersect(idx_1,idx_2),]
}else{
dd=absent_Isolate
}
dd$Isolate_ID[is.na(dd$Isolate_ID)] <- ""
dd$ID_Passs[is.na(dd$ID_Passs)] <- ""
write.csv(dd,row.names = FALSE,
file = "/Users/oliver/Desktop/absent.csv")
write.csv(dd,row.names = FALSE,
file = "/Users/oliver/Desktop/absent.csv")
absent_Isolate <- read.csv(file = "/Users/oliver/Desktop/absent.csv")
absent_Isolate <- absent_Isolate[!absent_Isolate$Isolate_ID == "",]
absent_Isolate$Collection.date <- as.character(as.Date(absent_Isolate$Collection.date))
TB_matched <-
lapply(seq_along(WHO_TB),function(i){
tb <- WHO_TB[[i]]
for (j in seq_along(tb[,1])) {
Record <- tb[j,]
Virus <- Record$Virus
Date <- Record$`Collection date`
Passage <- Record$`Passage history`
idx_Virus <- which(absent_Isolate$Virus == Virus)
idx_Date <- which(absent_Isolate$Collection.date == Date)
idx_Passage <- which(absent_Isolate$Passage.history == Passage)
idx_match <- intersect(intersect(idx_Virus,idx_Date),idx_Passage)
if(length(idx_match) != 0){
tb[j,1:2] <- c(absent_Isolate$Isolate_ID[idx_match[1]],absent_Isolate$ID_Passs[idx_match[1]])
}
}
return(tb)
})
names(TB_matched) <- names(WHO_TB)
save_path = "/Users/oliver/Downloads/同步空间/U-Vaccine/数据/HI/Francis Crick HI/H1N1(Annotation)/H1N1(43-Annotationee).xlsx"
write_TB_list(TB_matched,file_path = save_path)
rm(list=ls())
# 1. fill absent in Isolate_ID
flu_type = 'H1N1'
WHO_path = "/Users/oliver/Downloads/同步空间/U-Vaccine/数据/HI/Francis Crick HI/H1N1(Annotation)/H1N1(43-Annotationee).xlsx"
GISAID_path = paste0("/Users/oliver/Downloads/同步空间/U-Vaccine/数据/Sequence/Protein/",flu_type,"/All.fasta")
GISAID_data <- build_GISAID(GISAID_path,type=flu_type,seq_type = "AA",nROW = 16)
## 读取有EPI ID号的表格
WHO_TB <- read_WHO_xlsx(WHO_path)
## 找出每个表中没有EPI ID的行,去除重复
absent_Isolate <- extract_Isolate_ID_absent(WHO_TB,absent.row = "Isolate_ID",info_col=1:6,only_Ref = FALSE)
absent_Isolate$`Collection date` <- as.character(absent_Isolate$`Collection date`)
## 在GISAID参考信息中,寻找Virus name, Collection date, Passage history完全一样的序列
warning_list <- c()
consider_Data <- FALSE
for(i in seq_along(absent_Isolate[,1])){
GISAID_REF <- GISAID_data[[1]]
Record <- absent_Isolate[i,]
Virus <- Record$Virus
Date <- Record$`Collection date`
Passage <- Record$`Passage history`
idx_Virus <- which(GISAID_REF$`Isolate name` == Virus)
idx_Date <- which(GISAID_REF$`Collection date` == Date)
if(is.na(Date))
idx_Date <- seq_along(GISAID_REF[,1])
idx_Passage <- which(GISAID_REF$`Passage details/history` == Passage)
if(is.na(Passage))
idx_Passage <- seq_along(GISAID_REF[,1])
if(consider_Data)
idx_match <- intersect(intersect(idx_Virus, idx_Date),idx_Passage)
else
idx_match <- intersect(idx_Virus,idx_Passage)
if(length(idx_match) != 0){
print(i)
absent_Isolate[i,1:2] <- c(GISAID_REF$`Isolate ID`[idx_match[1]],'same')
}else if(length(idx_match) > 1){
warning_list <- c(warning_list,i)
}
}
idx_1 <- which(is.na(absent_Isolate$`Genetic group`))
idx_2 <- which(is.na(absent_Isolate$Isolate_ID))
if(length(idx_1)!=0&length(idx_2)!=0){
dd=absent_Isolate[-intersect(idx_1,idx_2),]
}else{
dd=absent_Isolate
}
dd$Isolate_ID[is.na(dd$Isolate_ID)] <- ""
dd$ID_Passs[is.na(dd$ID_Passs)] <- ""
write.csv(dd,row.names = FALSE,
file = "/Users/oliver/Desktop/absent.csv")
rm(list=ls())
# 1. fill absent in Isolate_ID
flu_type = 'H1N1'
WHO_path = "/Users/oliver/Downloads/同步空间/U-Vaccine/数据/HI/Francis Crick HI/H1N1(Annotation)/H1N1(43-Annotationee).xlsx"
GISAID_path = paste0("/Users/oliver/Downloads/同步空间/U-Vaccine/数据/Sequence/Protein/",flu_type,"/All.fasta")
GISAID_data <- build_GISAID(GISAID_path,type=flu_type,seq_type = "AA",nROW = 16)
## 读取有EPI ID号的表格
WHO_TB <- read_WHO_xlsx(WHO_path)
## 找出每个表中没有EPI ID的行,去除重复
absent_Isolate <- extract_Isolate_ID_absent(WHO_TB,absent.row = "Isolate_ID",info_col=1:6,only_Ref = FALSE)
absent_Isolate$`Collection date` <- as.character(absent_Isolate$`Collection date`)
## 在GISAID参考信息中,寻找Virus name, Collection date, Passage history完全一样的序列
warning_list <- c()
consider_Data <- FALSE
for(i in seq_along(absent_Isolate[,1])){
GISAID_REF <- GISAID_data[[1]]
Record <- absent_Isolate[i,]
Virus <- Record$Virus
Date <- Record$`Collection date`
Passage <- Record$`Passage history`
idx_Virus <- which(GISAID_REF$`Isolate name` == Virus)
idx_Date <- which(GISAID_REF$`Collection date` == Date)
if(is.na(Date))
idx_Date <- seq_along(GISAID_REF[,1])
idx_Passage <- which(GISAID_REF$`Passage details/history` == Passage)
if(is.na(Passage))
idx_Passage <- seq_along(GISAID_REF[,1])
if(consider_Data)
idx_match <- intersect(intersect(idx_Virus, idx_Date),idx_Passage)
else
idx_match <- intersect(idx_Virus,idx_Passage)
if(length(idx_match) != 0){
print(i)
absent_Isolate[i,1:2] <- c(GISAID_REF$`Isolate ID`[idx_match[1]],'same')
}else if(length(idx_match) > 1){
warning_list <- c(warning_list,i)
}
}
idx_1 <- which(is.na(absent_Isolate$`Genetic group`))
idx_2 <- which(is.na(absent_Isolate$Isolate_ID))
if(length(idx_1)!=0&length(idx_2)!=0){
dd=absent_Isolate[-intersect(idx_1,idx_2),]
}else{
dd=absent_Isolate
}
dd$Isolate_ID[is.na(dd$Isolate_ID)] <- ""
dd$ID_Passs[is.na(dd$ID_Passs)] <- ""
write.csv(dd,row.names = FALSE,
file = "/Users/oliver/Desktop/absent.csv")
rm(list=ls())
# 1. fill absent in Isolate_ID
flu_type = 'H1N1'
WHO_path = "/Users/oliver/Downloads/同步空间/U-Vaccine/数据/HI/Francis Crick HI/H1N1(Annotation)/H1N1(43-Annotationee).xlsx"
GISAID_path = paste0("/Users/oliver/Downloads/同步空间/U-Vaccine/数据/Sequence/Protein/",flu_type,"/All.fasta")
GISAID_data <- build_GISAID(GISAID_path,type=flu_type,seq_type = "AA",nROW = 16)
## 读取有EPI ID号的表格
WHO_TB <- read_WHO_xlsx(WHO_path)
## 找出每个表中没有EPI ID的行,去除重复
absent_Isolate <- extract_Isolate_ID_absent(WHO_TB,absent.row = "Isolate_ID",info_col=1:6,only_Ref = FALSE)
absent_Isolate$`Collection date` <- as.character(absent_Isolate$`Collection date`)
## 在GISAID参考信息中,寻找Virus name, Collection date, Passage history完全一样的序列
warning_list <- c()
consider_Data <- FALSE
for(i in seq_along(absent_Isolate[,1])){
GISAID_REF <- GISAID_data[[1]]
Record <- absent_Isolate[i,]
Virus <- Record$Virus
Date <- Record$`Collection date`
Passage <- Record$`Passage history`
idx_Virus <- which(GISAID_REF$`Isolate name` == Virus)
idx_Date <- which(GISAID_REF$`Collection date` == Date)
if(is.na(Date))
idx_Date <- seq_along(GISAID_REF[,1])
idx_Passage <- which(GISAID_REF$`Passage details/history` == Passage)
if(is.na(Passage))
idx_Passage <- seq_along(GISAID_REF[,1])
if(consider_Data)
idx_match <- intersect(intersect(idx_Virus, idx_Date),idx_Passage)
else
idx_match <- intersect(idx_Virus,idx_Passage)
if(length(idx_match) != 0){
print(i)
absent_Isolate[i,1:2] <- c(GISAID_REF$`Isolate ID`[idx_match[1]],'same')
}else if(length(idx_match) > 1){
warning_list <- c(warning_list,i)
}
}
idx_1 <- which(is.na(absent_Isolate$`Genetic group`))
idx_2 <- which(is.na(absent_Isolate$Isolate_ID))
if(length(idx_1)!=0&length(idx_2)!=0){
dd=absent_Isolate[-intersect(idx_1,idx_2),]
}else{
dd=absent_Isolate
}
dd$Isolate_ID[is.na(dd$Isolate_ID)] <- ""
dd$ID_Passs[is.na(dd$ID_Passs)] <- ""
write.csv(dd,row.names = FALSE,
file = "/Users/oliver/Desktop/absent.csv")
flu_type = 'H1N1'
WHO_path = "/Users/oliver/Downloads/同步空间/U-Vaccine/数据/HI/Francis Crick HI/H1N1(Annotation)/H1N1(43-Annotationee).xlsx"
GISAID_path = paste0("/Users/oliver/Downloads/同步空间/U-Vaccine/数据/Sequence/Protein/",flu_type,"/All.fasta")
GISAID_data <- build_GISAID(GISAID_path,type=flu_type,seq_type = "AA",nROW = 16)
## 读取有EPI ID号的表格
WHO_TB <- read_WHO_xlsx(WHO_path)
## 找出每个表中没有EPI ID的行,去除重复
absent_Isolate <- extract_Isolate_ID_absent(WHO_TB,absent.row = "Isolate_ID",info_col=1:6,only_Ref = FALSE)
absent_Isolate$`Collection date` <- as.character(absent_Isolate$`Collection date`)
## 在GISAID参考信息中,寻找Virus name, Collection date, Passage history完全一样的序列
warning_list <- c()
consider_Data <- FALSE
for(i in seq_along(absent_Isolate[,1])){
GISAID_REF <- GISAID_data[[1]]
Record <- absent_Isolate[i,]
Virus <- Record$Virus
Date <- Record$`Collection date`
Passage <- Record$`Passage history`
idx_Virus <- which(GISAID_REF$`Isolate name` == Virus)
idx_Date <- which(GISAID_REF$`Collection date` == Date)
if(is.na(Date))
idx_Date <- seq_along(GISAID_REF[,1])
idx_Passage <- which(GISAID_REF$`Passage details/history` == Passage)
if(is.na(Passage))
idx_Passage <- seq_along(GISAID_REF[,1])
if(consider_Data)
idx_match <- intersect(intersect(idx_Virus, idx_Date),idx_Passage)
else
idx_match <- intersect(idx_Virus,idx_Passage)
if(length(idx_match) != 0){
print(i)
absent_Isolate[i,1:2] <- c(GISAID_REF$`Isolate ID`[idx_match[1]],'same')
}else if(length(idx_match) > 1){
warning_list <- c(warning_list,i)
}
}
idx_1 <- which(is.na(absent_Isolate$`Genetic group`))
idx_2 <- which(is.na(absent_Isolate$Isolate_ID))
if(length(idx_1)!=0&length(idx_2)!=0){
dd=absent_Isolate[-intersect(idx_1,idx_2),]
}else{
dd=absent_Isolate
}
dd$Isolate_ID[is.na(dd$Isolate_ID)] <- ""
dd$ID_Passs[is.na(dd$ID_Passs)] <- ""
write.csv(dd,row.names = FALSE,
file = "/Users/oliver/Desktop/absent.csv")
absent_Isolate <- read.csv(file = "/Users/oliver/Desktop/absent.csv")
absent_Isolate <- absent_Isolate[!absent_Isolate$Isolate_ID == "",]
absent_Isolate$Collection.date <- as.character(as.Date(absent_Isolate$Collection.date))
TB_matched <-
lapply(seq_along(WHO_TB),function(i){
tb <- WHO_TB[[i]]
for (j in seq_along(tb[,1])) {
Record <- tb[j,]
Virus <- Record$Virus
Date <- Record$`Collection date`
Passage <- Record$`Passage history`
idx_Virus <- which(absent_Isolate$Virus == Virus)
idx_Date <- which(absent_Isolate$Collection.date == Date)
idx_Passage <- which(absent_Isolate$Passage.history == Passage)
idx_match <- intersect(intersect(idx_Virus,idx_Date),idx_Passage)
if(length(idx_match) != 0){
tb[j,1:2] <- c(absent_Isolate$Isolate_ID[idx_match[1]],absent_Isolate$ID_Passs[idx_match[1]])
}
}
return(tb)
})
names(TB_matched) <- names(WHO_TB)
save_path = "/Users/oliver/Downloads/同步空间/U-Vaccine/数据/HI/Francis Crick HI/H1N1(Annotation)/H1N1(43-Annotation).xlsx"
write_TB_list(TB_matched,file_path = save_path)
rm(list=ls())
# 1. fill absent in Isolate_ID
flu_type = 'H1N1'
WHO_path = "/Users/oliver/Downloads/同步空间/U-Vaccine/数据/HI/Francis Crick HI/H1N1(Annotation)/H1N1(43-Annotationee).xlsx"
GISAID_path = paste0("/Users/oliver/Downloads/同步空间/U-Vaccine/数据/Sequence/Protein/",flu_type,"/All.fasta")
GISAID_data <- build_GISAID(GISAID_path,type=flu_type,seq_type = "AA",nROW = 16)
## 读取有EPI ID号的表格
WHO_TB <- read_WHO_xlsx(WHO_path)
rm(list=ls())
WHO_path = "/Users/oliver/Downloads/同步空间/U-Vaccine/数据/HI/Francis Crick HI/H1N1(Annotation)/H1N1(43-Annotation).xlsx"
# 1. fill absent in Isolate_ID
flu_type = 'H1N1'
WHO_path = "/Users/oliver/Downloads/同步空间/U-Vaccine/数据/HI/Francis Crick HI/H1N1(Annotation)/H1N1(43-Annotation).xlsx"
GISAID_path = paste0("/Users/oliver/Downloads/同步空间/U-Vaccine/数据/Sequence/Protein/",flu_type,"/All.fasta")
GISAID_data <- build_GISAID(GISAID_path,type=flu_type,seq_type = "AA",nROW = 16)
## 读取有EPI ID号的表格
WHO_TB <- read_WHO_xlsx(WHO_path)
## 找出每个表中没有EPI ID的行,去除重复
absent_Isolate <- extract_Isolate_ID_absent(WHO_TB,absent.row = "Isolate_ID",info_col=1:6,only_Ref = FALSE)
absent_Isolate$`Collection date` <- as.character(absent_Isolate$`Collection date`)
## 在GISAID参考信息中,寻找Virus name, Collection date, Passage history完全一样的序列
warning_list <- c()
consider_Data <- FALSE
for(i in seq_along(absent_Isolate[,1])){
GISAID_REF <- GISAID_data[[1]]
Record <- absent_Isolate[i,]
Virus <- Record$Virus
Date <- Record$`Collection date`
Passage <- Record$`Passage history`
idx_Virus <- which(GISAID_REF$`Isolate name` == Virus)
idx_Date <- which(GISAID_REF$`Collection date` == Date)
if(is.na(Date))
idx_Date <- seq_along(GISAID_REF[,1])
idx_Passage <- which(GISAID_REF$`Passage details/history` == Passage)
if(is.na(Passage))
idx_Passage <- seq_along(GISAID_REF[,1])
if(consider_Data)
idx_match <- intersect(intersect(idx_Virus, idx_Date),idx_Passage)
else
idx_match <- intersect(idx_Virus,idx_Passage)
if(length(idx_match) != 0){
print(i)
absent_Isolate[i,1:2] <- c(GISAID_REF$`Isolate ID`[idx_match[1]],'same')
}else if(length(idx_match) > 1){
warning_list <- c(warning_list,i)
}
}
idx_1 <- which(is.na(absent_Isolate$`Genetic group`))
idx_2 <- which(is.na(absent_Isolate$Isolate_ID))
if(length(idx_1)!=0&length(idx_2)!=0){
dd=absent_Isolate[-intersect(idx_1,idx_2),]
}else{
dd=absent_Isolate
}
dd$Isolate_ID[is.na(dd$Isolate_ID)] <- ""
dd$ID_Passs[is.na(dd$ID_Passs)] <- ""
write.csv(dd,row.names = FALSE,
file = "/Users/oliver/Desktop/absent.csv")
absent_Isolate <- read.csv(file = "/Users/oliver/Desktop/absent.csv")
absent_Isolate <- absent_Isolate[!absent_Isolate$Isolate_ID == "",]
absent_Isolate$Collection.date <- as.character(as.Date(absent_Isolate$Collection.date))
TB_matched <-
lapply(seq_along(WHO_TB),function(i){
tb <- WHO_TB[[i]]
for (j in seq_along(tb[,1])) {
Record <- tb[j,]
Virus <- Record$Virus
Date <- Record$`Collection date`
Passage <- Record$`Passage history`
idx_Virus <- which(absent_Isolate$Virus == Virus)
idx_Date <- which(absent_Isolate$Collection.date == Date)
idx_Passage <- which(absent_Isolate$Passage.history == Passage)
idx_match <- intersect(intersect(idx_Virus,idx_Date),idx_Passage)
if(length(idx_match) != 0){
tb[j,1:2] <- c(absent_Isolate$Isolate_ID[idx_match[1]],absent_Isolate$ID_Passs[idx_match[1]])
}
}
return(tb)
})
names(TB_matched) <- names(WHO_TB)
save_path = "/Users/oliver/Downloads/同步空间/U-Vaccine/数据/HI/Francis Crick HI/H1N1(Annotation)/H1N1(43-Annotation).xlsx"
write_TB_list(TB_matched,file_path = save_path)
