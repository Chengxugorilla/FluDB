devtools::document()
test <- match_Row_Virus(H3N2_3,GISAID_H3N2[[1]],type="H3N2")
test
library(openxlsx)
# 创建一个新的 Excel 工作簿对象
wb <- createWorkbook()
# 添加工作表并写入数据
addWorksheet(wb, "Sheet1")
writeData(wb, sheet = "Sheet1", test[[1]])
addWorksheet(wb, "Sheet2")
writeData(wb, sheet = "Sheet2", test[[1]])
# 保存工作簿到文件
saveWorkbook(wb, "C:/Users/19177/Desktop/fastgithub_win-x64/test.xlxs", overwrite = TRUE)
# 保存工作簿到文件
saveWorkbook(wb, "C:/Users/19177/Desktop/test.xlsx", overwrite = TRUE)
devtools::document()
devtools::document()
write_WHO(test,"C:/Users/19177/Desktop/test.xlsx")
write_WHO(test,"C:/Users/19177/Desktop/test.xlsx")
test[[1]]$`Genetic group`
View(test[[333]])
test[[333]]$GISAID_ID == 0
!is.na(test[[333]]$`Genetic group`)
mm <-
lapply(seq_along(test), function(i){
idx_1 <- which(!is.na(test[[i]]$`Genetic group`))
idx_2 <- which(test[[i]]$GISAID_ID == 0)
return(intersect(idx_1,idx_2))
})
mm
mm <-
lapply(seq_along(test), function(i){
idx_1 <- which(!is.na(test[[i]]$`Genetic group`))
idx_2 <- which(test[[i]]$GISAID_ID == 0)
idx <- intersect(idx_1,idx_2)
return(test[[i]][idx,,drop=FALSE]$Virus)
})
mm
names(mm) <- names(test)
mm
is.null(mm)
sdfsdf <- Filter(Negate(is.null), mm)
sdfsdf
filtered_list <- Filter(function(x) length(x) > 0, mm)
filtered_list
length(filtered_list)
WHO_H3N2_TB <- read_WHO_xlsx("C:/Users/19177/Desktop/FluDB/inst/extdata/H3N2.xlsx")
WHO_H3N2 <-
clean_TB(WHO_H3N2_TB) %>%
clean_Mutation()
H3N2_1 <- std_Date(WHO_H3N2)
check_TB_Date(H3N2_1)
H3N2_2 <- std_Colnames(H3N2_1)
check_TB_Colnames(H3N2_2)
H3N2_3 <-
lapply(H3N2_2, function(x){
x$Nicknames <-
unlist(
WHO_standardization(x$Virus,type="H3N2"))
x
})
test <- match_Row_Virus(H3N2_3,GISAID_H3N2[[1]],type="H3N2")
mm <-
lapply(seq_along(test), function(i){
idx_1 <- which(!is.na(test[[i]]$`Genetic group`))
idx_2 <- which(test[[i]]$GISAID_ID == 0)
idx <- intersect(idx_1,idx_2)
return(test[[i]][idx,,drop=FALSE]$Virus)
})
names(mm) <- names(test)
filtered_list <- Filter(function(x) length(x) > 0, mm)
filtered_list
length(filtered_list)
WHO_H3N2_TB <- read_WHO_xlsx("C:/Users/19177/Desktop/FluDB/inst/extdata/H3N2.xlsx")
H3N2_1 <- std_Date(WHO_H3N2)
H3N2_2 <- std_Colnames(H3N2_1)
H3N2_3 <-
lapply(H3N2_2, function(x){
x$Nicknames <-
unlist(
WHO_standardization(x$Virus,type="H3N2"))
x
})
test <- match_Row_Virus(H3N2_3,GISAID_H3N2[[1]],type="H3N2")
mm <-
lapply(seq_along(test), function(i){
idx_1 <- which(!is.na(test[[i]]$`Genetic group`))
idx_2 <- which(test[[i]]$GISAID_ID == 0)
idx <- intersect(idx_1,idx_2)
return(test[[i]][idx,,drop=FALSE]$Virus)
})
names(mm) <- names(test)
filtered_list <- Filter(function(x) length(x) > 0, mm)
length(filtered_list)
filtered_list
WHO_H3N2_TB <- read_WHO_xlsx("C:/Users/19177/Desktop/FluDB/inst/extdata/H3N2.xlsx")
WHO_H3N2 <-
clean_TB(WHO_H3N2_TB) %>%
clean_Mutation()
View(WHO_H3N2[["16-4"]])
H3N2_1 <- std_Date(WHO_H3N2)
check_TB_Date(H3N2_1)
H3N2_2 <- std_Colnames(H3N2_1)
check_TB_Colnames(H3N2_2)
H3N2_3 <-
lapply(H3N2_2, function(x){
x$Nicknames <-
unlist(
WHO_standardization(x$Virus,type="H3N2"))
x
})
test <- match_Row_Virus(H3N2_3,GISAID_H3N2[[1]],type="H3N2")
mm <-
lapply(seq_along(test), function(i){
idx_1 <- which(!is.na(test[[i]]$`Genetic group`))
idx_2 <- which(test[[i]]$GISAID_ID == 0)
idx <- intersect(idx_1,idx_2)
return(test[[i]][idx,,drop=FALSE]$Virus)
})
names(mm) <- names(test)
filtered_list <- Filter(function(x) length(x) > 0, mm)
length(filtered_list)
filtered_list
WHO_H3N2_TB <- read_WHO_xlsx("C:/Users/19177/Desktop/FluDB/inst/extdata/H3N2.xlsx")
WHO_H3N2 <-
clean_TB(WHO_H3N2_TB) %>%
clean_Mutation()
H3N2_1 <- std_Date(WHO_H3N2)
check_TB_Date(H3N2_1)
H3N2_2 <- std_Colnames(H3N2_1)
check_TB_Colnames(H3N2_2)
H3N2_3 <-
lapply(H3N2_2, function(x){
x$Nicknames <-
unlist(
WHO_standardization(x$Virus,type="H3N2"))
x
})
test <- match_Row_Virus(H3N2_3,GISAID_H3N2[[1]],type="H3N2")
mm <-
lapply(seq_along(test), function(i){
idx_1 <- which(!is.na(test[[i]]$`Genetic group`))
idx_2 <- which(test[[i]]$GISAID_ID == 0)
idx <- intersect(idx_1,idx_2)
return(test[[i]][idx,,drop=FALSE]$Virus)
})
names(mm) <- names(test)
filtered_list <- Filter(function(x) length(x) > 0, mm)
length(filtered_list)
filtered_list
devtools::document()
devtools::document()
devtools::document()
View(test[[1]])
devtools::document()
test1 <- match_Col_Virus(test,GISAID_H3N2[[1]],type="H3N2")
warnings()
H3N2_table <- do.call("rbind.fill",test1)
H3N2_table1 <- H3N2_table[H3N2_table$GISAID_ID != 0,]
H3N2_table2 <- H3N2_table1[!is.na(H3N2_table1$GISAID_ID),]
H3N2_table3 <- H3N2_table2[,-c(2,3,4,5)]
Vir <- names(table(H3N2_table3$GISAID_ID)[table(H3N2_table3$GISAID_ID) > 1])
get_mode <- function(x) {
freq_table <- sort(table(x))
return(names(freq_table)[1])
}
test <-
lapply(seq_along(Vir), function(i){
x <- Vir[i]
rows <- unlist(apply(H3N2_table3[H3N2_table3$GISAID_ID == x,-c(1:5)],2,get_mode))
if(!is.null(rows)){
df <- as.data.frame(t(rows))
df <- cbind(x,df)
colnames(df)[1] <- "GISAID_ID"
return(df)
}
else
return()
})
names(test) <- Vir
test1 <- Filter(Negate(is.null), test)
sup <- do.call("rbind.fill",test1)
rownames(sup) <- names(test1)
H3N2_final <- rbind.fill(H3N2_table3[!H3N2_table3$GISAID_ID %in% Vir,],sup)
H3N2_final <- H3N2_final[!is.na(H3N2_final$GISAID_ID),]
dim(H3N2_final)
write.csv(H3N2_final,file = "C:/Users/19177/Desktop/H3N2-0726.csv")
GISAID_H1N1 <- build_GISAID("C:/Users/19177/Desktop/FluDB/inst/extdata/H1N1.fasta",type='H1N1')
WHO_H1N1_TB <- read_WHO_xlsx("C:/Users/19177/Desktop/FluDB/inst/extdata/H1N1 (no H1N2 tag).xlsx")
H1N1_1 <- std_Date(WHO_H1N1)
check_TB_Date(H1N1_1)
H1N1_2 <- std_Colnames(H1N1_1)
check_TB_Colnames(H1N1_2)
H1N1_3 <-
lapply(H1N1_2, function(x){
x$Nicknames <-
unlist(
WHO_standardization(x$Virus,type="H1N1"))
x
})
H1N1_4 <- match_Row_Virus(H1N1_3,GISAID_H1N1[[1]],type="H1N1")
devtools::document()
mm <- check_matched(H1N1_4)
mm
devtools::document()
mm <- check_matched(H1N1_4)
devtools::document()
mm <- check_matched(H1N1_4)
mm
length(mm)
mm
GISAID_H1N1 <- build_GISAID("C:/Users/19177/Desktop/FluDB/inst/extdata/H1N1.fasta",type='H1N1')
WHO_H1N1_TB <- read_WHO_xlsx("C:/Users/19177/Desktop/FluDB/inst/extdata/H1N1 (no H1N2 tag).xlsx")
WHO_H1N1 <-
clean_TB(WHO_H1N1_TB) %>%
clean_Mutation()
H1N1_1 <- std_Date(WHO_H1N1)
check_TB_Date(H1N1_1)
H1N1_2 <- std_Colnames(H1N1_1)
check_TB_Colnames(H1N1_2)
H1N1_3 <-
lapply(H1N1_2, function(x){
x$Nicknames <-
unlist(
WHO_standardization(x$Virus,type="H1N1"))
x
})
H1N1_4 <- match_Row_Virus(H1N1_3,GISAID_H1N1[[1]],type="H1N1")
mm <- check_matched(H1N1_4)
mm
WHO_H1N1_TB <- read_WHO_xlsx("C:/Users/19177/Desktop/FluDB/inst/extdata/H1N1 (no H1N2 tag).xlsx")
WHO_H1N1 <-
clean_TB(WHO_H1N1_TB) %>%
clean_Mutation()
H1N1_1 <- std_Date(WHO_H1N1)
check_TB_Date(H1N1_1)
H1N1_2 <- std_Colnames(H1N1_1)
check_TB_Colnames(H1N1_2)
H1N1_3 <-
lapply(H1N1_2, function(x){
x$Nicknames <-
unlist(
WHO_standardization(x$Virus,type="H1N1"))
x
})
H1N1_4 <- match_Row_Virus(H1N1_3,GISAID_H1N1[[1]],type="H1N1")
mm <- check_matched(H1N1_4)
mm
WHO_H1N1_TB <- read_WHO_xlsx("C:/Users/19177/Desktop/FluDB/inst/extdata/H1N1 (no H1N2 tag).xlsx")
WHO_H1N1 <-
clean_TB(WHO_H1N1_TB) %>%
clean_Mutation()
H1N1_1 <- std_Date(WHO_H1N1)
H1N1_2 <- std_Colnames(H1N1_1)
H1N1_3 <-
lapply(H1N1_2, function(x){
x$Nicknames <-
unlist(
WHO_standardization(x$Virus,type="H1N1"))
x
})
H1N1_4 <- match_Row_Virus(H1N1_3,GISAID_H1N1[[1]],type="H1N1")
mm <- check_matched(H1N1_4)
mm
WHO_H1N1_TB <- read_WHO_xlsx("C:/Users/19177/Desktop/FluDB/inst/extdata/H1N1 (no H1N2 tag).xlsx")
WHO_H1N1 <-
clean_TB(WHO_H1N1_TB) %>%
clean_Mutation()
H1N1_1 <- std_Date(WHO_H1N1)
H1N1_2 <- std_Colnames(H1N1_1)
H1N1_3 <-
lapply(H1N1_2, function(x){
x$Nicknames <-
unlist(
WHO_standardization(x$Virus,type="H1N1"))
x
})
H1N1_4 <- match_Row_Virus(H1N1_3,GISAID_H1N1[[1]],type="H1N1")
H1N1_list <- match_Col_Virus(H1N1_4,GISAID_H1N1[[1]],type="H1N1")
H1N1_table <- do.call("rbind.fill",H1N1_list)
H1N1_table1 <- H1N1_table[H1N1_table$GISAID_ID != 0,]
H1N1_table2 <- H1N1_table1[!is.na(H1N1_table1$GISAID_ID),]
H1N1_table3 <- H1N1_table2[,-c(2,3,4,5)]
Vir <- names(table(H1N1_table3$GISAID_ID)[table(H1N1_table3$GISAID_ID) > 1])
get_mode <- function(x) {
freq_table <- sort(table(x))
return(names(freq_table)[1])
}
test <-
lapply(seq_along(Vir), function(i){
x <- Vir[i]
rows <- unlist(apply(H3N2_table3[H3N2_table3$GISAID_ID == x,-c(1:5)],2,get_mode))
if(!is.null(rows)){
df <- as.data.frame(t(rows))
df <- cbind(x,df)
colnames(df)[1] <- "GISAID_ID"
return(df)
}
else
return()
})
test <-
lapply(seq_along(Vir), function(i){
x <- Vir[i]
rows <- unlist(apply(H1N1_table3[H1N1_table3$GISAID_ID == x,-c(1:5)],2,get_mode))
if(!is.null(rows)){
df <- as.data.frame(t(rows))
df <- cbind(x,df)
colnames(df)[1] <- "GISAID_ID"
return(df)
}
else
return()
})
names(test) <- Vir
test1 <- Filter(Negate(is.null), test)
sup <- do.call("rbind.fill",test1)
rownames(sup) <- names(test1)
H1N1_final <- rbind.fill(H1N1_table3[!H1N1_table3$GISAID_ID %in% Vir,],sup)
H1N1_final <- H1N1_final[!is.na(H1N1_final$GISAID_ID),]
dim(H1N1_final)
write.csv(H1N1_final,file = "C:/Users/19177/Desktop/H1N1-0726.csv")
devtools::document()
## 4. Add Nicknames column
H3N2_3 <- add_Nicknames(H3N2_2,type = "H3N2")
warnings()
H1N1_3 <- add_Nicknames(H1N1_2,type = "H1N1")
## 5. Turn rows and cols to GISAID_ID
H3N2_4 <- match_Row_Virus(H3N2_3,GISAID_H3N2[[1]],type="H3N2")
GISAID_H3N2 <- build_GISAID("C:/Users/19177/Desktop/FluDB/inst/extdata/H3N2.fasta",type='H3N2')
GISAID_H1N1 <- build_GISAID("C:/Users/19177/Desktop/FluDB/inst/extdata/H1N1.fasta",type='H1N1')
WHO_H3N2_TB <- read_WHO_xlsx("C:/Users/19177/Desktop/FluDB/inst/extdata/H3N2.xlsx")
WHO_H3N2 <-
clean_TB(WHO_H3N2_TB) %>%
clean_Mutation()
WHO_H1N1_TB <- read_WHO_xlsx("C:/Users/19177/Desktop/FluDB/inst/extdata/H1N1 (no H1N2 tag).xlsx")
WHO_H1N1 <-
clean_TB(WHO_H1N1_TB) %>%
clean_Mutation()
## 3. Check data regulation
H3N2_1 <- std_Date(WHO_H3N2)
H1N1_1 <- std_Date(WHO_H1N1)
check_TB_Date(H3N2_1)
check_TB_Date(H1N1_1)
H3N2_2 <- std_Colnames(H3N2_1)
H1N1_2 <- std_Colnames(H1N1_1)
check_TB_Colnames(H3N2_2)
check_TB_Colnames(H1N1_2)
## 4. Add Nicknames column
H3N2_3 <- add_Nicknames(H3N2_2,type = "H3N2")
H1N1_3 <- add_Nicknames(H1N1_2,type = "H1N1")
## 5. Turn rows and cols to GISAID_ID
H3N2_4 <- match_Row_Virus(H3N2_3,GISAID_H3N2[[1]],type="H3N2")
H3N2_3
H1N1_3
devtools::document()
## 4. Add Nicknames column
H3N2_3 <- add_Nicknames(H3N2_2,type = "H3N2")
H1N1_3 <- add_Nicknames(H1N1_2,type = "H1N1")
## 5. Turn rows and cols to GISAID_ID
H3N2_4 <- match_Row_Virus(H3N2_3,GISAID_H3N2[[1]],type="H3N2")
H1N1_4 <- match_Row_Virus(H1N1_3,GISAID_H1N1[[1]],type="H1N1")
H3N2_list <- match_Col_Virus(H3N2_4,GISAID_H3N2[[1]],type="H3N2")
H1N1_list <- match_Col_Virus(H1N1_4,GISAID_H1N1[[1]],type="H1N1")
## 6. Bind table into one table
library(plyr)
H3N2_table <- do.call("rbind.fill",H3N2_list)
H1N1_table <- do.call("rbind.fill",H1N1_list)
H3N2_table1 <- H3N2_table[H3N2_table$GISAID_ID != 0,]
H1N1_table1 <- H1N1_table[H1N1_table$GISAID_ID != 0,]
H3N2_table2 <- H3N2_table1[!is.na(H3N2_table1$GISAID_ID),]
H1N1_table2 <- H1N1_table1[!is.na(H1N1_table1$GISAID_ID),]
H3N2_table3 <- H3N2_table2[,-c(2,3,4,5)]
H1N1_table3 <- H1N1_table2[,-c(2,3,4,5)]
devtools::document()
## 7. Combine replicated GISAID_ID in rows
rm_Replicated(H3N2_table3)
devtools::document()
## 7. Combine replicated GISAID_ID in rows
rm_Replicated(H3N2_table3)
## 7. Combine replicated GISAID_ID in rows
H3N2_final <- rm_Replicated(H3N2_table3)
dim(H3N2_final)
H1N1_final <- rm_Replicated(H1N1_table3)
## 7. Combine replicated GISAID_ID in rows
H3N2_final <- rm_Replicated(H3N2_table3)
dim(H1N1_final)
View(H1N1_final)
View(H3N2_table2)
H3N2_table[H3N2_table$GISAID_ID != 0,"Nicknames"]
H3N2_table[H3N2_table$GISAID_ID != 0,-c("Nicknames")]
H3N2_table[H3N2_table$GISAID_ID != 0,colnames(H3N2_table) != "Nicknames"]
H3N2_table1 <- H3N2_table[H3N2_table$GISAID_ID != 0,colnames(H3N2_table) != "Nicknames"]
H1N1_table1 <- H1N1_table[H1N1_table$GISAID_ID != 0,colnames(H1N1_table) != "Nicknames"]
H3N2_table2 <- H3N2_table1[!is.na(H3N2_table1$GISAID_ID),]
H1N1_table2 <- H1N1_table1[!is.na(H1N1_table1$GISAID_ID),]
H3N2_table3 <- H3N2_table2[,-c(2,3,4,5)]
H1N1_table3 <- H1N1_table2[,-c(2,3,4,5)]
## 7. Combine replicated GISAID_ID in rows
H3N2_final <- rm_Replicated(H3N2_table3)
H1N1_final <- rm_Replicated(H1N1_table3)
View(H1N1_final)
## 8. Save table
write.csv(H3N2_final,file = "C:/Users/19177/Desktop/H3N2-0726.csv",row.names = FALSE)
## 8. Save table
write.csv(H3N2_final,file = "C:/Users/19177/Desktop/H3N2-0726.csv",row.names = FALSE)
write.csv(H1N1_final,file = "C:/Users/19177/Desktop/H1N1-0726.csv",row.names = FALSE)
write.csv(H3N2_final,file = "C:/Users/19177/Desktop/result/H3N2-0727.csv",row.names = FALSE)
write.csv(H1N1_final,file = "C:/Users/19177/Desktop/result/H1N1-0727.csv",row.names = FALSE)
GISAID_H3N2[[2]]
GISAID_H3N2[[1]]
View(GISAID_H3N2[[1]])
View(H3N2_final)
devtools::document()
## 9.
Generate_json(H3N2_final,GISAID_H3N2)
Ref_list <-
lapply(seq_along(idx_cols), function(i){
paste0('"',idx_cols[[i]],'":"',GISAID[[2]][idx],'",')
})
Ref_list <-
lapply(seq_along(idx_cols), function(i){
paste0('"',idx_cols[i],'":"',GISAID[[2]][i],'",')
})
Ref_list[[1]]
Ref_list[[length(Ref_list)]]
sub(",","",Ref_list[[length(Ref_list)]])
devtools::dcou
devtools::document()
devtools::document()
## 9.
Generate_json(H3N2_final,GISAID_H3N2)
devtools::document()
## 9.
Generate_json(H3N2_final,GISAID_H3N2)
Generate_json_vector(idx_cols,GISAID)
devtools::document()
## 9.
Generate_json(H3N2_final,GISAID_H3N2)
Generate_json_vector(idx_cols,GISAID)
result
View(result)
result[1]
result[length(result)]
devtools::document()
## 9.
Generate_json(H3N2_final,GISAID_H3N2,"C:/Users/19177/Desktop/result/H3N2")
devtools::document()
## 9.
Generate_json(H3N2_final,GISAID_H3N2)
## 9.
Generate_json(H3N2_final,GISAID_H3N2,"C:/Users/19177/Desktop/result/H3N2")
devtools::document()
devtools::document()
Generate_json(H3N2_final,GISAID_H3N2,"C:/Users/19177/Desktop/result/H3N2")
Generate_json(H1N1_final,GISAID_H1N1,"C:/Users/19177/Desktop/result/H1N1")
View(GISAID_H3N2)
View(GISAID_H3N2[[1]])
write.csv(GISAID_H3N2[[1]],"C:/Users/19177/Desktop/result/H3N2_GISAID.csv")
GISAID_H3N2 <- build_GISAID("C:/Users/19177/Desktop/FluDB/inst/extdata/H3N2.fasta",type='H3N2')
GISAID_H1N1 <- build_GISAID("C:/Users/19177/Desktop/FluDB/inst/extdata/H1N1.fasta",type='H1N1')
write.csv(GISAID_H3N2[[1]],"C:/Users/19177/Desktop/result/H3N2_GISAID.csv")
write.csv(GISAID_H1N1[[1]],"C:/Users/19177/Desktop/result/H1N1_GISAID.csv")
WHO_H3N2_TB <- read_WHO_xlsx("C:/Users/19177/Desktop/FluDB/inst/extdata/H3N2.xlsx")
WHO_H3N2 <-
clean_TB(WHO_H3N2_TB) %>%
clean_Mutation()
WHO_H1N1_TB <- read_WHO_xlsx("C:/Users/19177/Desktop/FluDB/inst/extdata/H1N1 (no H1N2 tag).xlsx")
WHO_H1N1 <-
clean_TB(WHO_H1N1_TB) %>%
clean_Mutation()
## 3. Check data regulation
H3N2_1 <- std_Date(WHO_H3N2)
H1N1_1 <- std_Date(WHO_H1N1)
check_TB_Date(H3N2_1)
check_TB_Date(H1N1_1)
H3N2_2 <- std_Colnames(H3N2_1)
H1N1_2 <- std_Colnames(H1N1_1)
check_TB_Colnames(H3N2_2)
check_TB_Colnames(H1N1_2)
## 4. Add Nicknames column
H3N2_3 <- add_Nicknames(H3N2_2,type = "H3N2")
H1N1_3 <- add_Nicknames(H1N1_2,type = "H1N1")
## 5. Turn rows and cols to GISAID_ID
H3N2_4 <- match_Row_Virus(H3N2_3,GISAID_H3N2[[1]],type="H3N2")
H1N1_4 <- match_Row_Virus(H1N1_3,GISAID_H1N1[[1]],type="H1N1")
check_matched(H1N1_4)
H3N2_list <- match_Col_Virus(H3N2_4,GISAID_H3N2[[1]],type="H3N2")
H1N1_list <- match_Col_Virus(H1N1_4,GISAID_H1N1[[1]],type="H1N1")
## 6. Bind table into one table
library(plyr)
H3N2_table <- do.call("rbind.fill",H3N2_list)
H1N1_table <- do.call("rbind.fill",H1N1_list)
H3N2_table1 <- H3N2_table[H3N2_table$GISAID_ID != 0,colnames(H3N2_table) != "Nicknames"]
H1N1_table1 <- H1N1_table[H1N1_table$GISAID_ID != 0,colnames(H1N1_table) != "Nicknames"]
H3N2_table2 <- H3N2_table1[!is.na(H3N2_table1$GISAID_ID),]
H1N1_table2 <- H1N1_table1[!is.na(H1N1_table1$GISAID_ID),]
H3N2_table3 <- H3N2_table2[,-c(2,3,4,5)]
H1N1_table3 <- H1N1_table2[,-c(2,3,4,5)]
## 7. Combine replicated GISAID_ID in rows
H3N2_final <- rm_Replicated(H3N2_table3)
H1N1_final <- rm_Replicated(H1N1_table3)
## 8. Save table
write.csv(H3N2_final,file = "C:/Users/19177/Desktop/result/H3N2-0727.csv",row.names = FALSE)
write.csv(H1N1_final,file = "C:/Users/19177/Desktop/result/H1N1-0727.csv",row.names = FALSE)
## 9. Generate json file
Generate_json(H3N2_final,GISAID_H3N2,"C:/Users/19177/Desktop/result/H3N2")
Generate_json(H1N1_final,GISAID_H1N1,"C:/Users/19177/Desktop/result/H1N1")
devtools::document()
## 9. Generate json file
Generate_json(H3N2_final,GISAID_H3N2,"C:/Users/19177/Desktop/result/H3N2")
Generate_json(H1N1_final,GISAID_H1N1,"C:/Users/19177/Desktop/result/H1N1")
